{
	"nodes":[
		{"id":"3fd801ea3b7084e6","type":"text","text":"# AD Persistence","x":-1524,"y":122,"width":304,"height":118},
		{"id":"bcd284ab7067ecb5","type":"text","text":"# Get all users and their hashes from DC","x":-319,"y":378,"width":359,"height":162},
		{"id":"920aa312a6dba36b","type":"text","text":"# Domain Controller Synchronization (DCSync Attack)\n\n---\n\n## Target\n\n- Active Directory domain controllers and their replication mechanisms.\n\n## Mechanism\n\n- Domain controllers use the **Directory Replication Service (DRS) Remote Protocol** to synchronize data between them.\n- Attackers exploit the **IDL_DRSGetNCChanges** API to mimic legitimate replication requests.\n- The domain controller only verifies if the request comes from an account with the correct privileges, not if it's from a valid domain controller.\n\n## Prerequisites\n\n- The attacker needs access to an account with the following rights:\n    - **Replicating Directory Changes**\n    - **Replicating Directory Changes All**\n    - **Replicating Directory Changes in Filtered Set**\n- By default, these rights are assigned to:\n    - Members of **Domain Admins**, **Enterprise Admins**, and **Administrators** groups.\n## Goal\n\n- Obtain NTLM hashes and/or plaintext passwords for domain users, including high-privilege accounts like the domain administrator.\n- Use the hashes for further attacks (e.g., pass-the-hash, lateral movement).\n\n## Post-Attack Actions\n\n- Extracted NTLM hashes can be:\n    - **Cracked** using tools like Hashcat with a dictionary and rules.\n    - **Used directly** in attacks like pass-the-hash.\n\n## Impact\n\n- Full access to domain credentials, allowing attackers to:\n    - Compromise any user account.\n    - Escalate privileges.\n    - Perform lateral movement.\n\n## Key Notes\n\n- The DCSync attack is highly effective but requires privileged accounts.\n- Exploits replication mechanisms rather than directly attacking individual user accounts.","x":206,"y":378,"width":1114,"height":1080},
		{"id":"1fc74673e786176f","type":"file","file":"NOTES/99. TOOLS/impacket/impacket-secretsdump.md","x":981,"y":1560,"width":1045,"height":400},
		{"id":"6627f657d87b8993","type":"text","text":"# golden-ticket","x":-314,"y":-800,"width":354,"height":102},
		{"id":"92df2de0db6e9e9a","type":"text","text":"# Shadow Copies\nA **Shadow Copy Attack** exploits the Microsoft **Volume Shadow Service (VSS)**, a backup technology that creates snapshots of files or entire volumes\nAttackers, particularly domain administrators, can abuse this feature to extract the **Active Directory Database (NTDS.dit)** along with the **SYSTEM hive** to retrieve user credentials offline.\nRequirements for Performing the Attack\n\n## Requirements for Performing the Attack\n\nTo successfully execute a Shadow Copy attack, the following conditions must be met:\n\n1. **Administrator Privileges:** The attacker must have domain admin access.\n    \n2. **Windows Machine with VSS Enabled:** The attack requires a Windows environment with the Volume Shadow Service active.\n    \n3. **Access to vshadow.exe:** The attack is performed using the **vshadow.exe** utility, which is included in the Windows SDK.\n    \n4. **Reg Utility:** Required to extract the SYSTEM hive from the Windows registry.","x":206,"y":-341,"width":665,"height":571},
		{"id":"ecc34a31b231261f","type":"text","text":"[[mimikatz#Obtain credentials from DC (dcsync attack by impersonating a domain controller)]]\n![[mimikatz#Obtain credentials from DC (dcsync attack by impersonating a domain controller)]]","x":206,"y":1560,"width":742,"height":560},
		{"id":"65754ecb25c1b291","type":"text","text":"1. Create a Shadow Copy\n    ```powershell\n    PS> vshadow.exe -nw -p  C:\n    # Disables writers (-nw) to speed up the snapshot creation.\n    # Creates a persistent (-p) shadow copy stored on disk.\n    ...\n    * SNAPSHOT ID = {c37217ab-e1c4-4245-9dfe-c81078180ae5} ...\n    ...\n       - Shadow copy device name: \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy2\n    ...\n    ```\n1. Extract the NTDS Database\n    ```powershell\n    # extract the NTDS.dit file (Active Directory Database)\n    PS> copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy2\\windows\\ntds\\ntds.dit c:\\ntds.dit.bak\n    ```\n3. Extract the SYSTEM Hive\n   The SYSTEM hive is needed to decrypt the NTDS database\n    ```powershell\n    PS> reg.exe save hklm\\system c:\\system.bak\n    ```\n4. Transfer Files to a Kali Machine and Extract Credentials Using SecretsDump\n    Move `ntds.dit.bak` and `system.bak` to your Kali Linux machine for offline credential extraction.\n![[impacket-secretsdump]]","x":1040,"y":-710,"width":1000,"height":940}
	],
	"edges":[
		{"id":"1877d00ab90ef1d2","fromNode":"920aa312a6dba36b","fromSide":"bottom","toNode":"ecc34a31b231261f","toSide":"top"},
		{"id":"f9a23a9d5cb9d366","fromNode":"920aa312a6dba36b","fromSide":"bottom","toNode":"1fc74673e786176f","toSide":"top"},
		{"id":"c74f3451edbd13d2","fromNode":"3fd801ea3b7084e6","fromSide":"right","toNode":"6627f657d87b8993","toSide":"left"},
		{"id":"bcbace7bbe99d6c6","fromNode":"3fd801ea3b7084e6","fromSide":"right","toNode":"bcd284ab7067ecb5","toSide":"left"},
		{"id":"ab55ea718241aefb","fromNode":"bcd284ab7067ecb5","fromSide":"right","toNode":"920aa312a6dba36b","toSide":"left"},
		{"id":"01e8331d70280779","fromNode":"bcd284ab7067ecb5","fromSide":"right","toNode":"92df2de0db6e9e9a","toSide":"left"},
		{"id":"7899fc14c2a6aeeb","fromNode":"92df2de0db6e9e9a","fromSide":"right","toNode":"65754ecb25c1b291","toSide":"left"}
	]
}